// automatically generated by the FlatBuffers compiler, do not modify

package csbparser

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type CheckBoxOptions struct {
	_tab flatbuffers.Table
}

func GetRootAsCheckBoxOptions(buf []byte, offset flatbuffers.UOffsetT) *CheckBoxOptions {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &CheckBoxOptions{}
	x.Init(buf, n+offset)
	return x
}

func (rcv *CheckBoxOptions) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *CheckBoxOptions) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *CheckBoxOptions) WidgetOptions(obj *WidgetOptions) *WidgetOptions {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		x := rcv._tab.Indirect(o + rcv._tab.Pos)
		if obj == nil {
			obj = new(WidgetOptions)
		}
		obj.Init(rcv._tab.Bytes, x)
		return obj
	}
	return nil
}

func (rcv *CheckBoxOptions) BackGroundBoxData(obj *ResourceData) *ResourceData {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		x := rcv._tab.Indirect(o + rcv._tab.Pos)
		if obj == nil {
			obj = new(ResourceData)
		}
		obj.Init(rcv._tab.Bytes, x)
		return obj
	}
	return nil
}

func (rcv *CheckBoxOptions) BackGroundBoxSelectedData(obj *ResourceData) *ResourceData {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		x := rcv._tab.Indirect(o + rcv._tab.Pos)
		if obj == nil {
			obj = new(ResourceData)
		}
		obj.Init(rcv._tab.Bytes, x)
		return obj
	}
	return nil
}

func (rcv *CheckBoxOptions) FrontCrossData(obj *ResourceData) *ResourceData {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(10))
	if o != 0 {
		x := rcv._tab.Indirect(o + rcv._tab.Pos)
		if obj == nil {
			obj = new(ResourceData)
		}
		obj.Init(rcv._tab.Bytes, x)
		return obj
	}
	return nil
}

func (rcv *CheckBoxOptions) BackGroundBoxDisabledData(obj *ResourceData) *ResourceData {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(12))
	if o != 0 {
		x := rcv._tab.Indirect(o + rcv._tab.Pos)
		if obj == nil {
			obj = new(ResourceData)
		}
		obj.Init(rcv._tab.Bytes, x)
		return obj
	}
	return nil
}

func (rcv *CheckBoxOptions) FrontCrossDisabledData(obj *ResourceData) *ResourceData {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(14))
	if o != 0 {
		x := rcv._tab.Indirect(o + rcv._tab.Pos)
		if obj == nil {
			obj = new(ResourceData)
		}
		obj.Init(rcv._tab.Bytes, x)
		return obj
	}
	return nil
}

func (rcv *CheckBoxOptions) SelectedState() bool {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(16))
	if o != 0 {
		return rcv._tab.GetBool(o + rcv._tab.Pos)
	}
	return true
}

func (rcv *CheckBoxOptions) MutateSelectedState(n bool) bool {
	return rcv._tab.MutateBoolSlot(16, n)
}

func (rcv *CheckBoxOptions) Displaystate() bool {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(18))
	if o != 0 {
		return rcv._tab.GetBool(o + rcv._tab.Pos)
	}
	return true
}

func (rcv *CheckBoxOptions) MutateDisplaystate(n bool) bool {
	return rcv._tab.MutateBoolSlot(18, n)
}

func CheckBoxOptionsStart(builder *flatbuffers.Builder) {
	builder.StartObject(8)
}
func CheckBoxOptionsAddWidgetOptions(builder *flatbuffers.Builder, widgetOptions flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(0, flatbuffers.UOffsetT(widgetOptions), 0)
}
func CheckBoxOptionsAddBackGroundBoxData(builder *flatbuffers.Builder, backGroundBoxData flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(1, flatbuffers.UOffsetT(backGroundBoxData), 0)
}
func CheckBoxOptionsAddBackGroundBoxSelectedData(builder *flatbuffers.Builder, backGroundBoxSelectedData flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(2, flatbuffers.UOffsetT(backGroundBoxSelectedData), 0)
}
func CheckBoxOptionsAddFrontCrossData(builder *flatbuffers.Builder, frontCrossData flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(3, flatbuffers.UOffsetT(frontCrossData), 0)
}
func CheckBoxOptionsAddBackGroundBoxDisabledData(builder *flatbuffers.Builder, backGroundBoxDisabledData flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(4, flatbuffers.UOffsetT(backGroundBoxDisabledData), 0)
}
func CheckBoxOptionsAddFrontCrossDisabledData(builder *flatbuffers.Builder, frontCrossDisabledData flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(5, flatbuffers.UOffsetT(frontCrossDisabledData), 0)
}
func CheckBoxOptionsAddSelectedState(builder *flatbuffers.Builder, selectedState bool) {
	builder.PrependBoolSlot(6, selectedState, true)
}
func CheckBoxOptionsAddDisplaystate(builder *flatbuffers.Builder, displaystate bool) {
	builder.PrependBoolSlot(7, displaystate, true)
}
func CheckBoxOptionsEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
