// automatically generated by the FlatBuffers compiler, do not modify

package csbparser

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type CapInsets struct {
	_tab flatbuffers.Struct
}

func (rcv *CapInsets) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *CapInsets) Table() flatbuffers.Table {
	return rcv._tab.Table
}

func (rcv *CapInsets) X() float32 {
	return rcv._tab.GetFloat32(rcv._tab.Pos + flatbuffers.UOffsetT(0))
}
func (rcv *CapInsets) MutateX(n float32) bool {
	return rcv._tab.MutateFloat32(rcv._tab.Pos+flatbuffers.UOffsetT(0), n)
}

func (rcv *CapInsets) Y() float32 {
	return rcv._tab.GetFloat32(rcv._tab.Pos + flatbuffers.UOffsetT(4))
}
func (rcv *CapInsets) MutateY(n float32) bool {
	return rcv._tab.MutateFloat32(rcv._tab.Pos+flatbuffers.UOffsetT(4), n)
}

func (rcv *CapInsets) Width() float32 {
	return rcv._tab.GetFloat32(rcv._tab.Pos + flatbuffers.UOffsetT(8))
}
func (rcv *CapInsets) MutateWidth(n float32) bool {
	return rcv._tab.MutateFloat32(rcv._tab.Pos+flatbuffers.UOffsetT(8), n)
}

func (rcv *CapInsets) Height() float32 {
	return rcv._tab.GetFloat32(rcv._tab.Pos + flatbuffers.UOffsetT(12))
}
func (rcv *CapInsets) MutateHeight(n float32) bool {
	return rcv._tab.MutateFloat32(rcv._tab.Pos+flatbuffers.UOffsetT(12), n)
}

func CreateCapInsets(builder *flatbuffers.Builder, x float32, y float32, width float32, height float32) flatbuffers.UOffsetT {
	builder.Prep(4, 16)
	builder.PrependFloat32(height)
	builder.PrependFloat32(width)
	builder.PrependFloat32(y)
	builder.PrependFloat32(x)
	return builder.Offset()
}
